input * {
    xkb_layout "fr"
    xkb_variant "oss"
    repeat_delay 200
    repeat_rate 30
}

# 60% layout-like for laptop
input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout custom
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
}

font pango:monospace 8

# use Windows key for $mod
set $mod Mod4

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up o
set $down l
set $left k
set $right m

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
set $term_name kitty
bindsym $mod+Return exec $term_name
bindsym $mod+Shift+Return exec $term_name --class=floating-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start app launcher
bindsym $mod+d exec bemenu-run -l 20 -i

# start splatmoji https://github.com/cspeterson/splatmoji
bindcode $mod+59 exec "splatmoji type"
# start splatmoji for gitmojis
bindcode $mod+Shift+59 exec "splatmoji -j -m type ~/.local/share/splatmoji/data/gitmojis.tsv"

# notifications control
bindsym ctrl+space exec dunstctl close
bindsym ctrl+Shift+space exec dunstctl close-all
bindsym ctrl+Alt+space exec dunstctl action

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

bindsym $mod+s layout stacking
bindsym $mod+e layout default

bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# switch to workspace
bindsym $mod+ampersand workspace number 1
bindsym $mod+eacute workspace number 2
bindsym $mod+quotedbl workspace number 3
bindsym $mod+apostrophe workspace number 4
bindsym $mod+parenleft workspace number 5
bindsym $mod+egrave workspace number 7
bindsym $mod+underscore workspace number 8
bindsym $mod+ccedilla workspace number 9
bindsym $mod+agrave workspace number 10

# move focused container to workspace
bindsym $mod+Shift+ampersand move container to workspace number 1
bindsym $mod+Shift+eacute move container to workspace number 2
bindsym $mod+Shift+quotedbl move container to workspace number 3
bindsym $mod+Shift+apostrophe move container to workspace number 4
bindsym $mod+Shift+parenleft move container to workspace number 5
bindsym $mod+Shift+egrave move container to workspace number 7
bindsym $mod+Shift+underscore move container to workspace number 8
bindsym $mod+Shift+ccedilla move container to workspace number 9
bindsym $mod+Shift+agrave move container to workspace number 10

bindsym $mod+a focus parent

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Output configuration
output * bg #000000 solid_color
output DP-1 position 0,0
output DVI-D-1 position 1920,0

# Sound
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound
bindsym Shift+F4 exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $right       resize shrink width 10 px or 10 ppt
        bindsym $up          resize grow height 10 px or 10 ppt
        bindsym $down        resize shrink height 10 px or 10 ppt
        bindsym $left        resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Right        resize shrink width 10 px or 10 ppt
        bindsym Up           resize grow height 10 px or 10 ppt
        bindsym Down         resize shrink height 10 px or 10 ppt
        bindsym Left         resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Lock
bindsym $mod+Shift+X exec ~/.scripts/lock.sh

# Screenshot
bindsym Print exec flameshot gui

bindsym $mod+x [urgent=latest] focus

# Colors
set $base00 #2d2d2d
set $base01 #393939
set $base02 #515151
set $base03 #747369
set $base04 #a09f93
set $base05 #d3d0c8
set $base06 #e8e6df
set $base07 #f2f0ec
set $base08 #f2777a
set $base09 #f99157
set $base0A #ffcc66
set $base0B #99cc99
set $base0C #66cccc
set $base0D #6699cc
set $base0E #cc99cc
set $base0F #d27b53

# Basic color configuration using the Base16 variables for windows and borders.
# Property Name         Border  BG      Text    Indicator Child Border
client.focused          $base05 $base0D $base00 $base0D $base0D
client.focused_inactive $base01 $base01 $base05 $base03 $base01
client.unfocused        $base01 $base00 $base05 $base01 $base01
client.urgent           $base08 $base08 $base00 $base08 $base08
client.placeholder      $base00 $base00 $base05 $base00 $base00
client.background #000

# Gaps
smart_gaps on
smart_borders on

# Windows border
default_border pixel 1

# Change tiling for specific applications
for_window [class="Yad" title="yad-calendar"] floating enable
for_window [app_id="ulauncher"] floating enable, border none
for_window [app_id="floating-terminal"] floating enable, resize set 800 450

# Specific workspaces
assign [class="^[cC]hromium$"] workspace number 2
assign [app_id="firefox"] workspace number 2
assign [class="^[sS]ignal*"] workspace number 3
assign [class="^[fF]erdi*"] workspace number 3
assign [class="^[sS]lack*"] workspace number 3
assign [app_id="thunderbird"] workspace number 4
assign [app_id="mpv"] workspace number 10
assign [app_id="ColinDuquesnoy.gitlab.com.MellowPlayer"] workspace number 5
assign [app_id="org.keepassxc.KeePassXC"] workspace number 7
assign [class="^looking-glass-client$"] workspace number 10

workspace number 0 output DVI-D-2

# Clipboard support
exec wl-paste -t text --watch clipman store

# Startup applications
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec sworkstyle
exec nm-applet --indicator
exec dunst
exec slack
exec davmail ~/.config/davmail/guillaume.properties
exec firefox
exec thunderbird
exec keepassxc
exec flameshot
exec MellowPlayer
exec ferdi
exec signal-desktop --use-tray-icon
exec waybar

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

